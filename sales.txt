import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load your dataset into a DataFrame (replace 'your_data.csv' with the actual file path)
data = pd.read_csv('/content/Advertising (2).csv')

print(data.columns)


# Remove leading and trailing whitespaces from column names
data.columns = data.columns.str.strip()

# Encode categorical variables using get_dummies()
data = pd.get_dummies(data, columns=['Unnamed: 0', 'TV', 'Radio', 'Newspaper', ], drop_first=True)

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(data.drop('Sales', axis=1), data['Sales'], test_size=0.2, random_state=42)


# Initialize and train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate RMSE (Root Mean Squared Error) and R-squared
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)

print(f'RMSE: {rmse}')
print(f'R-squared: {r2}')

# Create a new data point with advertising spend, target audience, and advertising platform
new_data = pd.DataFrame({
    'TV': [100], # Remove the non-breaking space character
    'Radio': [50],
    'Newspaper': [20],
    'Unnamed: 0': [0],
    'advertising_spend': [1000],
    'target_audience_segment_B': [1],
    'advertising_platform_platform_Y': [1]
})

# Ensure the columns in new_data match the order and names from the training data
expected_columns = data.columns # Use the columns from the original dataset

# Check if the columns in new_data match the expected columns
if set(new_data.columns) != set(expected_columns):
    missing_columns = set(expected_columns) - set(new_data.columns)
    print(f'Missing columns in new_data: {missing_columns}')
else:
# Make a sales prediction
    predicted_sales = model.predict(new_data)
    print(f'Predicted Sales: {predicted_sales[0]}')
